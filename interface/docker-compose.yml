version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "23008:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
      - api3

  db:
    image: postgres:15
    container_name: fastapi_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fastapi
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api1:
    build: .
    container_name: fastapi_api1
    ports:
      - "23001:3000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fastapi
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SERVER_NAME=api1
    depends_on:
      db:
        condition: service_healthy

  api2:
    build: .
    container_name: fastapi_api2
    ports:
      - "23002:3000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fastapi
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SERVER_NAME=api2
    depends_on:
      db:
        condition: service_healthy

  api3:
    build: .
    container_name: fastapi_api3
    ports:
      - "23003:3000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fastapi
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SERVER_NAME=api3
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
